<?xml version="1.0"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro">

  <xacro:include filename="$(find ur_description)/urdf/inc/ur_transmissions.xacro" />
  <xacro:include filename="$(find ur_description)/urdf/inc/ur_common.xacro" />

  <xacro:macro name="ur_robot" params="
    name
    prefix
    tf_prefix
    parent
    *origin
    joint_limits_parameters_file
    kinematics_parameters_file
    physical_parameters_file
    visual_parameters_file
    generate_ros2_control_tag:=true
    transmission_hw_interface:=hardware_interface/PositionJointInterface
    safety_limits:=false
    safety_pos_margin:=0.15
    safety_k_position:=20
    use_fake_hardware:=true
    fake_sensor_commands:=false
    sim_gazebo:=false
    sim_ignition:=false
    headless_mode:=false
    initial_positions:=${dict(shoulder_pan_joint=2.30,shoulder_lift_joint=-1.56,elbow_joint=-1.47,wrist_1_joint=-1.70,wrist_2_joint=1.58,wrist_3_joint=0.72)}
    use_tool_communication:=false
    tool_voltage:=0
    tool_parity:=0
    tool_baud_rate:=115200
    tool_stop_bits:=1
    tool_rx_idle_chars:=1.5
    tool_tx_idle_chars:=3.5
    tool_device_name:=/tmp/ttyUR
    tool_tcp_port:=54321
    robot_ip:=0.0.0.0
    script_filename:=to_be_filled_by_ur_robot_driver
    output_recipe_filename:=to_be_filled_by_ur_robot_driver
    input_recipe_filename:=to_be_filled_by_ur_robot_driver
    reverse_port:=50001
    script_sender_port:=50002
    reverse_ip:=0.0.0.0
    script_command_port:=50004
    trajectory_port:=50003
    non_blocking_read:=true
    keep_alive_count:=2
    isaac_joint_commands:=false
    isaac_joint_states:=false"
    >

    <!-- Load configuration data from the provided .yaml files -->
    <xacro:read_model_data
      joint_limits_parameters_file="$(find ur_description)/config/ur10e/joint_limits.yaml"
      kinematics_parameters_file="$(find ur_description)/config/ur10e/default_kinematics.yaml"
      physical_parameters_file="$(find ur_description)/config/ur10e/physical_parameters.yaml"
      visual_parameters_file="$(find ur_description)/config/ur10e/visual_parameters.yaml"
      force_abs_paths="false"/>


      <!-- ros2 control include -->
      <xacro:include filename="$(find dual_arm_panda_ur_moveit_config)/config/ur.ros2_control.xacro" />
      <!-- ros2 control instance -->
      <xacro:ur_ros2_control
        name="${name}"
        prefix="${prefix}"
        use_fake_hardware="${use_fake_hardware}"
        initial_positions="${dict(shoulder_pan_joint=2.30,shoulder_lift_joint=-1.56,elbow_joint=-1.47,wrist_1_joint=-1.70,wrist_2_joint=1.58,wrist_3_joint=0.72)}"
        fake_sensor_commands="false"
        headless_mode="false"
        sim_gazebo="false"
        sim_ignition="false"
        script_filename="to_be_filled_by_ur_robot_driver"
        output_recipe_filename="to_be_filled_by_ur_robot_driver"
        input_recipe_filename="to_be_filled_by_ur_robot_driver"
        tf_prefix=""
        hash_kinematics="${kinematics_hash}"
        robot_ip="192.168.56.101"
        use_tool_communication="false"
        tool_voltage="0"
        tool_parity="0"
        tool_baud_rate="115200"
        tool_stop_bits="1"
        tool_rx_idle_chars="1.5"
        tool_tx_idle_chars="3.5"
        tool_device_name="/tmp/ttyUR"
        tool_tcp_port="54321"
        reverse_port="50001"
        script_sender_port="50002"
        reverse_ip="192.168.56.101"
        script_command_port="50004"
        trajectory_port="50003"
        non_blocking_read="true"
        keep_alive_count="2"
        />
      <xacro:include filename="2f_85.ros2_control.xacro" />
      <xacro:robotiq_gripper_ros2_control
        name="" prefix="${prefix}"
        sim_ignition="false"
        sim_isaac="false"
        isaac_joint_commands="${isaac_joint_commands}"
        isaac_joint_states="${isaac_joint_states}"
        use_fake_hardware="${use_fake_hardware}"
        mock_sensor_commands="false"
        com_port="/dev/ttyUSB0" />

    <!-- Add URDF transmission elements (for ros_control) -->
    <!--<xacro:ur_arm_transmission prefix="${prefix}" hw_interface="${transmission_hw_interface}" />-->
    <!-- Placeholder for ros2_control transmission which don't yet exist -->

    <!-- links -  main serial chain -->
    <link name="${prefix}base_link"/>
    <link name="${prefix}base_link_inertia">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 ${pi}"/>
        <geometry>
          <mesh filename="package://ur_description/meshes/ur10e/visual/base.dae" />
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 ${pi}"/>
        <geometry>
          <mesh filename="package://ur_description/meshes/ur10e/collision/base.stl" />
        </geometry>
      </collision>
      <xacro:cylinder_inertial radius="${base_inertia_radius}" length="${base_inertia_length}" mass="${base_mass}">
        <origin xyz="0 0 0" rpy="0 0 0" />
      </xacro:cylinder_inertial>
    </link>
    <link name="${prefix}shoulder_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 ${pi}"/>
        <geometry>
          <mesh filename="package://ur_description/meshes/ur10e/visual/shoulder.dae" />
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 ${pi}"/>
        <geometry>
          <mesh filename="package://ur_description/meshes/ur10e/collision/shoulder.stl" />
        </geometry>
      </collision>
      <inertial>
        <mass value="${shoulder_mass}"/>
        <origin rpy="${shoulder_inertia_rotation}" xyz="${shoulder_cog}"/>
        <inertia
            ixx="${shoulder_inertia_ixx}"
            ixy="${shoulder_inertia_ixy}"
            ixz="${shoulder_inertia_ixz}"
            iyy="${shoulder_inertia_iyy}"
            iyz="${shoulder_inertia_iyz}"
            izz="${shoulder_inertia_izz}"
        />
      </inertial>    
    </link>
    <link name="${prefix}upper_arm_link">
      <visual>
        <origin xyz="0 0 ${shoulder_offset}" rpy="${pi/2} 0 ${-pi/2}"/>
        <geometry>
          <mesh filename="package://ur_description/meshes/ur10e/visual/upperarm.dae" />
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 0 ${shoulder_offset}" rpy="${pi/2} 0 ${-pi/2}"/>
        <geometry>
          <mesh filename="package://ur_description/meshes/ur10e/collision/upperarm.stl" />
        </geometry>
      </collision>
      <inertial>
        <mass value="${upper_arm_mass}"/>
        <origin rpy="${upper_arm_inertia_rotation}" xyz="${upper_arm_cog}"/>
        <inertia
            ixx="${upper_arm_inertia_ixx}"
            ixy="${upper_arm_inertia_ixy}"
            ixz="${upper_arm_inertia_ixz}"
            iyy="${upper_arm_inertia_iyy}"
            iyz="${upper_arm_inertia_iyz}"
            izz="${upper_arm_inertia_izz}"
        />
      </inertial>
    </link>
    <link name="${prefix}forearm_link">
      <visual>
        <origin xyz="0 0 ${elbow_offset}" rpy="${pi/2} 0 ${-pi/2}"/>
        <geometry>
          <mesh filename="package://ur_description/meshes/ur10e/visual/forearm.dae" />
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 0 ${elbow_offset}" rpy="${pi/2} 0 ${-pi/2}"/>
        <geometry>
          <mesh filename="package://ur_description/meshes/ur10e/collision/forearm.stl" />
        </geometry>
      </collision>
      <inertial>
        <mass value="${forearm_mass}"/>
        <origin rpy="${forearm_inertia_rotation}" xyz="${forearm_cog}"/>
        <inertia
            ixx="${forearm_inertia_ixx}"
            ixy="${forearm_inertia_ixy}"
            ixz="${forearm_inertia_ixz}"
            iyy="${forearm_inertia_iyy}"
            iyz="${forearm_inertia_iyz}"
            izz="${forearm_inertia_izz}"
        />
      </inertial>
    </link>
    <link name="${prefix}wrist_1_link">
	  <xacro:get_visual_params name="wrist_1" type="visual_offset"/>
      <visual>
      	<origin xyz="0 0 ${visual_params}" rpy="${pi/2} 0 0"/>
        <geometry>
          <mesh filename="package://ur_description/meshes/ur10e/visual/wrist1.dae" />
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 0 ${visual_params}" rpy="${pi/2} 0 0"/>
        <geometry>
          <mesh filename="package://ur_description/meshes/ur10e/collision/wrist1.stl" />
        </geometry>
      </collision>
      <inertial>
        <mass value="${wrist_1_mass}"/>
        <origin rpy="${wrist_1_inertia_rotation}" xyz="${wrist_1_cog}"/>
        <inertia
            ixx="${wrist_1_inertia_ixx}"
            ixy="${wrist_1_inertia_ixy}"
            ixz="${wrist_1_inertia_ixz}"
            iyy="${wrist_1_inertia_iyy}"
            iyz="${wrist_1_inertia_iyz}"
            izz="${wrist_1_inertia_izz}"
        />
      </inertial>
    </link>
    <link name="${prefix}wrist_2_link">
	  <xacro:get_visual_params name="wrist_2" type="visual_offset"/>
      <visual>
        <origin xyz="0 0 ${visual_params}" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://ur_description/meshes/ur10e/visual/wrist2.dae" />
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 0 ${visual_params}" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://ur_description/meshes/ur10e/collision/wrist2.stl" />
        </geometry>
      </collision>
      <inertial>
        <mass value="${wrist_2_mass}"/>
        <origin rpy="${wrist_2_inertia_rotation}" xyz="${wrist_2_cog}"/>
        <inertia
            ixx="${wrist_2_inertia_ixx}"
            ixy="${wrist_2_inertia_ixy}"
            ixz="${wrist_2_inertia_ixz}"
            iyy="${wrist_2_inertia_iyy}"
            iyz="${wrist_2_inertia_iyz}"
            izz="${wrist_2_inertia_izz}"
        />
      </inertial>
    </link>
    <link name="${prefix}wrist_3_link">
	  <xacro:get_visual_params name="wrist_3" type="visual_offset"/>
      <visual>
        <origin xyz="0 0 ${visual_params}" rpy="${pi/2} 0 0"/>
        <geometry>
          <mesh filename="package://ur_description/meshes/ur10e/visual/wrist3.dae" />
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 0 ${visual_params}" rpy="${pi/2} 0 0"/>
        <geometry>
          <mesh filename="package://ur_description/meshes/ur10e/collision/wrist3.stl" />
        </geometry>
      </collision>
      <inertial>
        <mass value="${wrist_3_mass}"/>
        <origin rpy="${wrist_3_inertia_rotation}" xyz="${wrist_3_cog}"/>
        <inertia
            ixx="${wrist_3_inertia_ixx}"
            ixy="${wrist_3_inertia_ixy}"
            ixz="${wrist_3_inertia_ixz}"
            iyy="${wrist_3_inertia_iyy}"
            iyz="${wrist_3_inertia_iyz}"
            izz="${wrist_3_inertia_izz}"
        />
      </inertial>
    </link>

    <!-- base_joint fixes base_link to the environment -->
    <joint name="${prefix}base_joint" type="fixed">
      <xacro:insert_block name="origin" />
      <parent link="${parent}" />
      <child link="${prefix}base_link" />
    </joint>

    <!-- joints - main serial chain -->
    <joint name="${prefix}base_link-base_link_inertia" type="fixed">
      <parent link="${prefix}base_link" />
      <child link="${prefix}base_link_inertia" />
      <!-- 'base_link' is REP-103 aligned (so X+ forward), while the internal
           frames of the robot/controller have X+ pointing backwards.
           Use the joint between 'base_link' and 'base_link_inertia' (a dummy
           link/frame) to introduce the necessary rotation over Z (of pi rad).
      -->
      <origin xyz="0 0 0" rpy="0 0 ${pi}" />
    </joint>
    <joint name="${prefix}shoulder_pan_joint" type="revolute">
      <parent link="${prefix}base_link_inertia" />
      <child link="${prefix}shoulder_link" />
      <origin xyz="${shoulder_x} ${shoulder_y} ${shoulder_z}" rpy="${shoulder_roll} ${shoulder_pitch} ${shoulder_yaw}" />
      <axis xyz="0 0 1" />
      <limit lower="${shoulder_pan_lower_limit}" upper="${shoulder_pan_upper_limit}"
        effort="${shoulder_pan_effort_limit}" velocity="${shoulder_pan_velocity_limit}"/>
      <xacro:if value="${safety_limits}">
         <safety_controller soft_lower_limit="${shoulder_pan_lower_limit + safety_pos_margin}" soft_upper_limit="${shoulder_pan_upper_limit - safety_pos_margin}" k_position="${safety_k_position}" k_velocity="0.0"/>
      </xacro:if>
      <dynamics damping="0" friction="0"/>
    </joint>
    <joint name="${prefix}shoulder_lift_joint" type="revolute">
      <parent link="${prefix}shoulder_link" />
      <child link="${prefix}upper_arm_link" />
      <origin xyz="${upper_arm_x} ${upper_arm_y} ${upper_arm_z}" rpy="${upper_arm_roll} ${upper_arm_pitch} ${upper_arm_yaw}" />
      <axis xyz="0 0 1" />
      <limit lower="${shoulder_lift_lower_limit}" upper="${shoulder_lift_upper_limit}"
        effort="${shoulder_lift_effort_limit}" velocity="${shoulder_lift_velocity_limit}"/>
      <xacro:if value="${safety_limits}">
         <safety_controller soft_lower_limit="${shoulder_lift_lower_limit + safety_pos_margin}" soft_upper_limit="${shoulder_lift_upper_limit - safety_pos_margin}" k_position="${safety_k_position}" k_velocity="0.0"/>
      </xacro:if>
      <dynamics damping="0" friction="0"/>
    </joint>
    <joint name="${prefix}elbow_joint" type="revolute">
      <parent link="${prefix}upper_arm_link" />
      <child link="${prefix}forearm_link" />
      <origin xyz="${forearm_x} ${forearm_y} ${forearm_z}" rpy="${forearm_roll} ${forearm_pitch} ${forearm_yaw}" />
      <axis xyz="0 0 1" />
      <limit lower="${elbow_joint_lower_limit}" upper="${elbow_joint_upper_limit}"
        effort="${elbow_joint_effort_limit}" velocity="${elbow_joint_velocity_limit}"/>
      <xacro:if value="${safety_limits}">
         <safety_controller soft_lower_limit="${elbow_joint_lower_limit + safety_pos_margin}" soft_upper_limit="${elbow_joint_upper_limit - safety_pos_margin}" k_position="${safety_k_position}" k_velocity="0.0"/>
      </xacro:if>
      <dynamics damping="0" friction="0"/>
    </joint>
    <joint name="${prefix}wrist_1_joint" type="revolute">
      <parent link="${prefix}forearm_link" />
      <child link="${prefix}wrist_1_link" />
      <origin xyz="${wrist_1_x} ${wrist_1_y} ${wrist_1_z}" rpy="${wrist_1_roll} ${wrist_1_pitch} ${wrist_1_yaw}" />
      <axis xyz="0 0 1" />
      <limit lower="${wrist_1_lower_limit}" upper="${wrist_1_upper_limit}"
        effort="${wrist_1_effort_limit}" velocity="${wrist_1_velocity_limit}"/>
      <xacro:if value="${safety_limits}">
         <safety_controller soft_lower_limit="${wrist_1_lower_limit + safety_pos_margin}" soft_upper_limit="${wrist_1_upper_limit - safety_pos_margin}" k_position="${safety_k_position}" k_velocity="0.0"/>
      </xacro:if>
      <dynamics damping="0" friction="0"/>
    </joint>
    <joint name="${prefix}wrist_2_joint" type="revolute">
      <parent link="${prefix}wrist_1_link" />
      <child link="${prefix}wrist_2_link" />
      <origin xyz="${wrist_2_x} ${wrist_2_y} ${wrist_2_z}" rpy="${wrist_2_roll} ${wrist_2_pitch} ${wrist_2_yaw}" />
      <axis xyz="0 0 1" />
      <limit lower="${wrist_2_lower_limit}" upper="${wrist_2_upper_limit}"
             effort="${wrist_2_effort_limit}" velocity="${wrist_2_velocity_limit}"/>
      <xacro:if value="${safety_limits}">
         <safety_controller soft_lower_limit="${wrist_2_lower_limit + safety_pos_margin}" soft_upper_limit="${wrist_2_upper_limit - safety_pos_margin}" k_position="${safety_k_position}" k_velocity="0.0"/>
      </xacro:if>
      <dynamics damping="0" friction="0"/>
    </joint>
    <joint name="${prefix}wrist_3_joint" type="${wrist_3_joint_type}">
      <parent link="${prefix}wrist_2_link" />
      <child link="${prefix}wrist_3_link" />
      <origin xyz="${wrist_3_x} ${wrist_3_y} ${wrist_3_z}" rpy="${wrist_3_roll} ${wrist_3_pitch} ${wrist_3_yaw}" />
      <axis xyz="0 0 1" />
      <xacro:if value="${wrist_3_joint_type != 'continuous'}">
        <limit lower="${wrist_3_lower_limit}" upper="${wrist_3_upper_limit}"
          effort="${wrist_3_effort_limit}" velocity="${wrist_3_velocity_limit}"/>
        <xacro:if value="${safety_limits}">
          <safety_controller soft_lower_limit="${wrist_3_lower_limit + safety_pos_margin}" soft_upper_limit="${wrist_3_upper_limit - safety_pos_margin}" k_position="${safety_k_position}" k_velocity="0.0"/>
        </xacro:if>
      </xacro:if>
      <xacro:unless value="${wrist_3_joint_type != 'continuous'}">
        <limit effort="${wrist_3_effort_limit}" velocity="${wrist_3_velocity_limit}"/>
        <xacro:if value="${safety_limits}">
          <safety_controller k_position="${safety_k_position}" k_velocity="0.0"/>
        </xacro:if>
      </xacro:unless>
      <dynamics damping="0" friction="0"/>
    </joint>

    <link name="${prefix}ft_frame"/>
    <joint name="${prefix}wrist_3_link-ft_frame" type="fixed">
      <parent link="${prefix}wrist_3_link"/>
      <child link="${prefix}ft_frame"/>
      <origin xyz="0 0 0" rpy="${pi} 0 0"/>
    </joint>

    <!-- ROS-Industrial 'base' frame - base_link to UR 'Base' Coordinates transform -->
    <link name="${prefix}base"/>
    <joint name="${prefix}base_link-base_fixed_joint" type="fixed">
      <!-- Note the rotation over Z of pi radians - as base_link is REP-103
           aligned (i.e., has X+ forward, Y+ left and Z+ up), this is needed
           to correctly align 'base' with the 'Base' coordinate system of
           the UR controller.
      -->
      <origin xyz="0 0 0" rpy="0 0 ${pi}"/>
      <parent link="${prefix}base_link"/>
      <child link="${prefix}base"/>
    </joint>

    <!-- ROS-Industrial 'flange' frame - attachment point for EEF models -->
    <link name="${prefix}flange" />
    <joint name="${prefix}wrist_3-flange" type="fixed">
      <parent link="${prefix}wrist_3_link" />
      <child link="${prefix}flange" />
      <origin xyz="0 0 0" rpy="0 ${-pi/2.0} ${-pi/2.0}" />
    </joint>

    <!-- ROS-Industrial 'tool0' frame - all-zeros tool frame -->
    <link name="${prefix}tool0"/>
    <joint name="${prefix}flange-tool0" type="fixed">
      <!-- default toolframe - X+ left, Y+ up, Z+ front -->
      <origin xyz="0 0 0" rpy="${pi/2.0} 0 ${pi/2.0}"/>
      <parent link="${prefix}flange"/>
      <child link="${prefix}tool0"/>
    </joint>
    <joint name="${prefix}ur_to_robotiq_joint" type="fixed">
      <!-- The parent link must be read from the robot model it is attached to. -->
      <parent link="${prefix}tool0" />
      <child link="${prefix}ur_to_robotiq_link" />
      <origin xyz="0 0 0" rpy="0 0 0" />
    </joint>

    <link name="${prefix}ur_to_robotiq_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <mesh
            filename="package://robotiq_description/meshes/visual/2f_85/ur_to_robotiq_adapter.dae" />
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <mesh
            filename="package://robotiq_description/meshes/collision/2f_85/ur_to_robotiq_adapter.stl" />
        </geometry>
      </collision>
      <inertial>
        <mass value="0.01" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.000044" ixy="0.0" ixz="0.0" iyy="0.000027" iyz="0.0" izz="0.000027" />
      </inertial>
    </link>

    <link name="${prefix}robotiq_85_base_link">
      <visual>
        <geometry>
          <mesh filename="package://robotiq_description/meshes/visual/2f_85/robotiq_base.dae" />
        </geometry>
      </visual>
      <collision>
        <geometry>
          <mesh filename="package://robotiq_description/meshes/collision/2f_85/robotiq_base.stl" />
        </geometry>
      </collision>
      <inertial>
        <origin xyz="0.0 2.274e-05 0.03232288" rpy="0 0 0" />
        <mass value="6.6320197e-01" />
        <inertia ixx="5.1617816e-04" iyy="5.8802208e-04" izz="3.9462776e-04" ixy="2.936e-8"
          ixz="0.0" iyz="-3.2296e-7" />
      </inertial>
    </link>
    <link name="${prefix}robotiq_85_left_knuckle_link">
      <visual>
        <geometry>
          <mesh filename="package://robotiq_description/meshes/visual/2f_85/left_knuckle.dae" />
        </geometry>
      </visual>
      <collision>
        <geometry>
          <mesh filename="package://robotiq_description/meshes/collision/2f_85/left_knuckle.stl" />
        </geometry>
      </collision>
      <inertial>
        <origin xyz="0.01213197 0.0002 -0.00058647" rpy="0 0 0" />
        <mass value="1.384773208e-02" />
        <inertia ixx="3.5232e-7" iyy="2.31944e-6" izz="2.23136e-6" ixy="0.0" ixz="1.1744e-7" iyz="0" />
      </inertial>
    </link>
    <link name="${prefix}robotiq_85_right_knuckle_link">
      <visual>
        <geometry>
          <mesh filename="package://robotiq_description/meshes/visual/2f_85/right_knuckle.dae" />
        </geometry>
      </visual>
      <collision>
        <geometry>
          <mesh filename="package://robotiq_description/meshes/collision/2f_85/right_knuckle.stl" />
        </geometry>
      </collision>
      <inertial>
        <origin xyz="-0.01213197 0.0002 -0.00058647" rpy="0 0 0" />
        <mass value="1.384773208e-02" />
        <inertia ixx="3.5232e-7" iyy="2.31944e-6" izz="2.23136e-6" ixy="0.0" ixz="-1.1744e-7"
          iyz="0.0" />
      </inertial>
    </link>

    <link name="${prefix}robotiq_85_left_finger_link">
      <visual>
        <geometry>
          <mesh filename="package://robotiq_description/meshes/visual/2f_85/left_finger.dae" />
        </geometry>
      </visual>
      <collision>
        <geometry>
          <mesh filename="package://robotiq_description/meshes/collision/2f_85/left_finger.stl" />
        </geometry>
      </collision>
      <inertial>
        <origin xyz="0.00346899 -0.00079447 0.01867121" rpy="0 0 0" />
        <mass value="4.260376752e-02" />
        <inertia ixx="1.385792000000000e-05" iyy="1.183208e-05" izz="5.19672e-06" ixy="0.0"
          ixz="-2.17264e-06" iyz="0.0" />
      </inertial>
    </link>

    <link name="${prefix}robotiq_85_right_finger_link">
      <visual>
        <geometry>
          <mesh filename="package://robotiq_description/meshes/visual/2f_85/right_finger.dae" />
        </geometry>
      </visual>
      <collision>
        <geometry>
          <mesh filename="package://robotiq_description/meshes/collision/2f_85/right_finger.stl" />
        </geometry>
      </collision>
      <inertial>
        <origin xyz="-0.00346899 -5.53e-06 0.01867121" rpy="0 0 0" />
        <mass value="4.260376752000000e-02" />
        <inertia ixx="1.385792e-05" iyy="1.183208e-05" izz="5.19672e-06" ixy="0.0" ixz="2.17264e-06"
          iyz="0.0" />
      </inertial>
    </link>

    <link name="${prefix}robotiq_85_left_inner_knuckle_link">
      <visual>
        <geometry>
          <mesh filename="package://robotiq_description/meshes/visual/2f_85/left_inner_knuckle.dae" />
        </geometry>
      </visual>
      <collision>
        <geometry>
          <mesh
            filename="package://robotiq_description/meshes/collision/2f_85/left_inner_knuckle.stl" />
        </geometry>
      </collision>
      <inertial>
        <origin xyz="0.01897699 0.00015001 0.02247101" rpy="0 0 0" />
        <mass value="2.969376448e-02" />
        <inertia ixx="9.57136e-06" iyy="8.69056e-06" izz="8.19144e-06" ixy="0.0" ixz="-3.93424e-06"
          iyz="0.0" />
      </inertial>
    </link>

    <link name="${prefix}robotiq_85_right_inner_knuckle_link">
      <visual>
        <geometry>
          <mesh filename="package://robotiq_description/meshes/visual/2f_85/right_inner_knuckle.dae" />
        </geometry>
      </visual>
      <collision>
        <geometry>
          <mesh
            filename="package://robotiq_description/meshes/collision/2f_85/right_inner_knuckle.stl" />
        </geometry>
      </collision>
      <inertial>
        <origin xyz="-0.01926824 5.001e-05 0.02222178" rpy="0 0 0" />
        <mass value="2.969376448e-02" />
        <inertia ixx="9.42456e-06" iyy="8.69056e-06" izz="8.33824e-06" ixy="0.0" ixz="3.9636e-06"
          iyz="0.0" />
      </inertial>
    </link>

    <link name="${prefix}robotiq_85_left_finger_tip_link">
      <visual>
        <geometry>
          <mesh filename="package://robotiq_description/meshes/visual/2f_85/left_finger_tip.dae" />
        </geometry>
      </visual>
      <collision>
        <geometry>
          <mesh filename="package://robotiq_description/meshes/collision/2f_85/left_finger_tip.stl" />
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu1>100000.0</mu1>
              <mu2>100000.0</mu2>
            </ode>
          </friction>
          <contact>
            <ode>
              <kp>1e+5</kp>
              <kd>1</kd>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <minDepth>0.002</minDepth>
              <maxVel>0</maxVel>
            </ode>
          </contact>
        </surface>
      </collision>
      <inertial>
        <origin xyz="-0.01456706 -0.0008 0.01649701" rpy="0 0 0" />
        <mass value="4.268588744e-02" />
        <inertia ixx="1.048152e-05" iyy="1.197888e-05" izz="4.22784e-06" ixy="0.0" ixz="3.5232e-6"
          iyz="0.0" />
      </inertial>
    </link>

    <link name="${prefix}robotiq_85_right_finger_tip_link">
      <visual>
        <geometry>
          <mesh filename="package://robotiq_description/meshes/visual/2f_85/right_finger_tip.dae" />
        </geometry>
      </visual>
      <collision>
        <geometry>
          <mesh filename="package://robotiq_description/meshes/collision/2f_85/right_finger_tip.stl" />
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu1>100000.0</mu1>
              <mu2>100000.0</mu2>
            </ode>
          </friction>
          <contact>
            <ode>
              <kp>1e+5</kp>
              <kd>1</kd>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <minDepth>0.002</minDepth>
              <maxVel>0</maxVel>
            </ode>
          </contact>
        </surface>
      </collision>
      <inertial>
        <origin xyz="0.01456706 5e-05 0.01649701" rpy="0 0 0" />
        <mass value="4.268588744e-02" />
        <inertia ixx="1.048152e-05" iyy="1.197888e-05" izz="4.22784e-06" ixy="0.0" ixz="-3.5232e-06"
          iyz="0.0" />
      </inertial>
    </link>

    <joint name="${prefix}robotiq_85_base_joint" type="fixed">
      <parent link="${prefix}ur_to_robotiq_link" />
      <child link="${prefix}robotiq_85_base_link" />
      <!-- <xacro:insert_block name="origin" /> -->
    </joint>

    <joint name="${prefix}robotiq_85_left_knuckle_joint" type="revolute">
      <parent link="${prefix}robotiq_85_base_link" />
      <child link="${prefix}robotiq_85_left_knuckle_link" />
      <axis xyz="0 -1 0" />
      <origin xyz="0.03060114 0.0 0.05490452" rpy="0 0 0" />
      <limit lower="0.0" upper="0.8" velocity="0.5" effort="50" />
    </joint>

    <joint name="${prefix}robotiq_85_right_knuckle_joint" type="revolute">
      <parent link="${prefix}robotiq_85_base_link" />
      <child link="${prefix}robotiq_85_right_knuckle_link" />
      <axis xyz="0 -1 0" />
      <origin xyz="-0.03060114 0.0 0.05490452" rpy="0 0 0" />
      <limit lower="-0.8" upper="0.0" velocity="0.5" effort="50" />
      <mimic joint="${prefix}robotiq_85_left_knuckle_joint" multiplier="-1" />
    </joint>

    <joint name="${prefix}robotiq_85_left_finger_joint" type="fixed">
      <parent link="${prefix}robotiq_85_left_knuckle_link" />
      <child link="${prefix}robotiq_85_left_finger_link" />
      <origin xyz="0.03152616 0.0 -0.00376347" rpy="0 0 0" />
    </joint>

    <joint name="${prefix}robotiq_85_right_finger_joint" type="fixed">
      <parent link="${prefix}robotiq_85_right_knuckle_link" />
      <child link="${prefix}robotiq_85_right_finger_link" />
      <origin xyz="-0.03152616 0.0 -0.00376347" rpy="0 0 0" />
    </joint>

    <joint name="${prefix}robotiq_85_left_inner_knuckle_joint" type="continuous">
      <parent link="${prefix}robotiq_85_base_link" />
      <child link="${prefix}robotiq_85_left_inner_knuckle_link" />
      <axis xyz="0 -1 0" />
      <origin xyz="0.0127 0.0 0.06142" rpy="0 0 0" />
      <mimic joint="${prefix}robotiq_85_left_knuckle_joint" />
    </joint>

    <joint name="${prefix}robotiq_85_right_inner_knuckle_joint" type="continuous">
      <parent link="${prefix}robotiq_85_base_link" />
      <child link="${prefix}robotiq_85_right_inner_knuckle_link" />
      <axis xyz="0 -1 0" />
      <origin xyz="-0.0127 0.0 0.06142" rpy="0 0 0" />
      <mimic joint="${prefix}robotiq_85_left_knuckle_joint" multiplier="-1" />
    </joint>

    <joint name="${prefix}robotiq_85_left_finger_tip_joint" type="continuous">
      <parent link="${prefix}robotiq_85_left_finger_link" />
      <child link="${prefix}robotiq_85_left_finger_tip_link" />
      <axis xyz="0 -1 0" />
      <origin xyz="0.00563134 0.0 0.04718515" rpy="0 0 0" />
      <mimic joint="${prefix}robotiq_85_left_knuckle_joint" multiplier="-1" />
    </joint>

    <joint name="${prefix}robotiq_85_right_finger_tip_joint" type="continuous">
      <parent link="${prefix}robotiq_85_right_finger_link" />
      <child link="${prefix}robotiq_85_right_finger_tip_link" />
      <axis xyz="0 -1 0" />
      <origin xyz="-0.00563134 0.0 0.04718515" rpy="0 0 0" />
      <mimic joint="${prefix}robotiq_85_left_knuckle_joint" />
    </joint>

  </xacro:macro>
</robot>